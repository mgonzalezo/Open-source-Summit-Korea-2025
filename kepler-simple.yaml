# Kepler Simple Configuration for Testing/Demo Environments
# Optimized for containerized environments like kind, minikube, etc.
# This configuration disables features that require bare-metal access

image:
  repository: quay.io/sustainable_computing_io/kepler
  pullPolicy: IfNotPresent
  tag: latest

# Configuration for Kepler
config:
  # Logging configuration
  log:
    level: info
    format: text
  
  # Host system paths (mounted from host)
  host:
    sysfs: /host/sys
    procfs: /host/proc
  
  # Monitoring intervals
  monitor:
    interval: 5s
    staleness: 500ms
    maxTerminated: 100
    minTerminatedEnergyThreshold: 10
  
  # RAPL (Running Average Power Limit) configuration
  # Empty zones since RAPL won't be available in containers
  rapl:
    zones: []
  
  # Exporter configuration
  exporter:
    stdout:
      enabled: false
    prometheus:
      enabled: true
      debugCollectors:
        - go
      metricsLevel:
        - node
        - process
        - container
  
  # Web server configuration
  web:
    configFile: ""
    listenAddresses:
      - :28282
  
  # Debug configuration
  debug:
    pprof:
      enabled: false
  
  # Kubernetes integration - DISABLED for compatibility
  kube:
    enabled: false  # Disable to avoid node name conflicts
    config: ""
    nodeName: ""
  
  # Development/testing features
  dev:
    fake-cpu-meter:
      enabled: true  # Enable fake CPU meter for testing
      zones: []

# Service Monitor for Prometheus (disabled by default)
serviceMonitor:
  enabled: false

# DaemonSet configuration
daemonset:
  # Enable host PID namespace for system monitoring
  hostPID: true
  
  # Tolerations to run on all nodes
  tolerations:
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
  
  # Node selector (empty to run on all nodes)
  nodeSelector: {}
  
  # Security context - minimal for testing
  securityContext:
    runAsNonRoot: false
    runAsUser: 0
    privileged: false
    readOnlyRootFilesystem: false
  
  # Resource limits (conservative for testing)
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  # Volume mounts for host system access
  extraVolumes:
    - name: proc
      hostPath:
        path: /proc
        type: Directory
    - name: sys
      hostPath:
        path: /sys
        type: Directory
  
  extraVolumeMounts:
    - name: proc
      mountPath: /host/proc
      readOnly: true
    - name: sys
      mountPath: /host/sys
      readOnly: true

# Service configuration
service:
  type: ClusterIP
  port: 28282
  targetPort: 28282

# RBAC - minimal permissions for testing
rbac:
  create: true

# Service Account
serviceAccount:
  create: true
  name: "" 